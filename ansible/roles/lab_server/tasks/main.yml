---
- include: user.yml

- name: Set SELinux to disabled state
  ansible.posix.selinux:
    state: disabled
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux']

- name: Enable IPv4 forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    reload: yes

- name: Enable IPv6 forwarding
  sysctl:
    name: net.ipv6.conf.all.forwarding
    value: "1"
    state: present
    reload: yes

- name: Add br_netfilter to /etc/modules-load.d/
  copy:
    content: "br_netfilter"
    dest: /etc/modules-load.d/br_netfilter.conf
    mode: "u=rw,g=,o="
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux']

- name: Load br_netfilter
  community.general.modprobe:
    name: br_netfilter
    state: present
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux']

- name: Set bridge-nf-call-iptables (just to be sure)
  sysctl:
    name: "{{ item }}"
    value: "1"
    state: present
    reload: yes
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux']
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables

- name: Add /usr/local/bin to sudo secure_path
  lineinfile:
    line: 'Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin'
    regexp: "Defaults(\\s)*secure_path(\\s)*="
    state: present
    insertafter: EOF
    path: /etc/sudoers
    validate: 'visudo -cf %s'
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux']

- name: Set a hostname
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"

- name: Add hostname to /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: '^127\.0\.0\.1[ \t]+localhost'
    line: '127.0.0.1 localhost {{ ansible_hostname }} {{ ansible_hostname }}.{{ environment_domain }}'
    state: present
  tags: hostsfile

- name: Add local hostname to 127.0.1.1 in /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: '^127\.0\.1\.1.*'
    line: '127.0.1.1 {{ ansible_hostname }} {{ ansible_hostname }}.{{ environment_domain }}'
    insertafter: '^127\.0\.0\.1.*'
  tags: hostsfile

- name: Install apt packages
  apt:
    name:
    - acl
    - zip
    - build-essential
    - ca-certificates
    - curl
    - fonts-firacode
    - gnupg
    - htop
    - haveged
    - jq
    - locales
    - lsb-release
    - python3-pip
    - man
    - openssl
    - software-properties-common
    - ssh
    - sudo
    - telnet
    - unzip
    - vim
    - zsh
    - libfontconfig1
    - libgtk-3-0
    - libxi6
    - libxrender1
    - libxtst6
    state: present
    update_cache: true
  register: apt_action
  retries: 100
  until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)

- name: change user shell to zsh
  user:
    name: "{{ ansible_user }}"
    shell: /bin/zsh
  tags: lab-server

- name: change addl user shell to zsh
  user:
    name: "{{ addl_admin_user }}"
    shell: /bin/zsh
  tags: lab-server

- name: Check if dotfiles have already been loaded
  stat:
    path: /home/{{ addl_admin_user }}/.zshrc
  register: dotfiles
  tags: lab-server, dotfiles

- name: Create ab/misc/ab-dotfiles directory
  ansible.builtin.file:
    path: /ab/misc/ab-dotfiles
    state: directory
    owner: "{{ addl_admin_user }}"
    group: "{{ addl_admin_user }}"
    mode: '0755'
  when: dotfiles.stat.exists == false
  tags: lab-server

- name: Clone dotfiles repo
  ansible.builtin.git:
    repo: "{{ git_dotfiles_url }}"
    dest: /ab/misc/ab-dotfiles
  when: dotfiles.stat.exists == false
  tags: lab-server

- name: Change owner of /ab/misc/ab-dotfiles folder
  shell: chown -R abtraining:abtraining /ab/misc/ab-dotfiles
  tags: lab-server

- name: Run dotfiles install
  become: true
  become_user: "{{ addl_admin_user }}"
  shell: cd /ab/misc/ab-dotfiles && sudo chmod +x install.sh && ./install.sh
  when: dotfiles.stat.exists == false
  tags: lab-server

- name: Create ab/labs directory
  ansible.builtin.file:
    path: /ab/labs
    state: directory
    owner: "{{ addl_admin_user }}"
    group: "{{ addl_admin_user }}"
    mode: '0755'
  tags: lab-server

- name: Clone Lab Repo
  ansible.builtin.git:
    repo: "{{ git_lab_url }}"
    dest: /ab/labs
    force: yes
  tags: lab-repo

- name: Change owner of /ab/labs folder
  shell: chown -R abtraining:abtraining /ab/labs
  tags: lab-repo

- name: Find all of the README files inside this directory
  find:
    paths: "/ab/labs/"
    patterns: "README.md"
    recurse: yes
  register: repos
  tags: replace, lab-repo

- name: Replace LABSERVERNAME with the local DNS hostname in the files
  replace:
    path: "{{ item.path }}"
    regexp: 'LABSERVERNAME'
    replace: '{{ ansible_hostname }}.{{ environment_domain }}'
  with_items: "{{ repos.files }}"
  tags: replace, lab-repo
