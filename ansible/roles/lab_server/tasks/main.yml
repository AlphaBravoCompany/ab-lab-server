---
- include: user.yml

- name: Set SELinux to disabled state
  ansible.posix.selinux:
    state: disabled
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux']

- name: Enable IPv4 forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    reload: yes

- name: Enable IPv6 forwarding
  sysctl:
    name: net.ipv6.conf.all.forwarding
    value: "1"
    state: present
    reload: yes

- name: Add br_netfilter to /etc/modules-load.d/
  copy:
    content: "br_netfilter"
    dest: /etc/modules-load.d/br_netfilter.conf
    mode: "u=rw,g=,o="
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux']

- name: Load br_netfilter
  community.general.modprobe:
    name: br_netfilter
    state: present
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux']

- name: Set bridge-nf-call-iptables (just to be sure)
  sysctl:
    name: "{{ item }}"
    value: "1"
    state: present
    reload: yes
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux']
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables

- name: Add /usr/local/bin to sudo secure_path
  lineinfile:
    line: 'Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin'
    regexp: "Defaults(\\s)*secure_path(\\s)*="
    state: present
    insertafter: EOF
    path: /etc/sudoers
    validate: 'visudo -cf %s'
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux']

- name: Install apt packages
  apt:
    name:
    - zip
    - build-essential
    - ca-certificates
    - curl
    - fonts-firacode
    - gnupg
    - htop
    - haveged
    - jq
    - locales
    - lsb-release
    - python3-pip
    - man
    - openssl
    - software-properties-common
    - ssh
    - sudo
    - telnet
    - unzip
    - vim
    - zsh
    - libfontconfig1
    - libgtk-3-0
    - libxi6
    - libxrender1
    - libxtst6
    state: present
    update_cache: true
  register: apt_action
  retries: 100
  until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)

- name: change user shell to zsh
  user:
    name: "{{ ansible_user }}"
    shell: /bin/zsh

- name: change addl user shell to zsh
  user:
    name: "{{ addl_admin_user }}"
    shell: /bin/zsh

- name: Create ab/tmp/ab-dotfiles directory
  ansible.builtin.file:
    path: /ab/tmp/dotfiles
    state: directory
    mode: '0755'

- name: Clone dotfiles repo
  ansible.builtin.git:
    repo: "{{ git_dotfile_url }}"
    dest: /ab/tmp/ab-dotfiles

- name: Run dotfiles install
  become: true
  become_user: {{ addl_admin_user }}
  shell: cd /ab/tmp/ab-dotfiles && chmod +x install.sh && ./install.sh

- name: Remove /ab/tmp/ab-dotfile directory
  ansible.builtin.file:
    path: /ab/tmp/ab-dotfiles
    state: absent
  tags: lab-server

- name: Create ab/labs directory
  ansible.builtin.file:
    path: /ab/labs
    state: directory
    mode: '0755'

- name: Clone Lab Repo
  ansible.builtin.git:
    repo: "{{ git_lab_url }}"
    dest: /ab/labs